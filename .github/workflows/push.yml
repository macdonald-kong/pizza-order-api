name: CI

on:
  push:
    branches: 
      - main   
      
jobs:

  deploy-api:
    runs-on: ubuntu-22.04
    name: Deploy API to Kong Control Plane
    
    steps:        
    
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install decK tool
      run: |
        curl -sL https://github.com/kong/deck/releases/download/v1.25.0/deck_1.25.0_linux_amd64.tar.gz -o deck.tar.gz
        tar -xf deck.tar.gz -C /tmp
        sudo cp /tmp/deck /usr/local/bin/

    # Install Inso CLI which we will use for Linting and Testing: https://docs.insomnia.rest/inso-cli/introduction

    - name: Install Inso CLI tool
      run: |
        curl -sL https://github.com/Kong/insomnia/releases/download/lib%403.18.0/inso-linux-3.18.0.tar.xz -o inso.tar.xz
        tar -xf inso.tar.xz -C /tmp
        sudo cp /tmp/inso /usr/local/bin/

    - name: Export OpenAPI Spec
      run: inso export spec "Pizza Orders" -o oas.yaml

    - name: Lint OpenAPI Spec
      run: inso lint spec "Pizza Orders"
      
    # Check that the OpenAPI Specification file that we exported from the Insomnia Workspace is valid and well formed

    - name: Lint OpenAPI Spec
      run: |
        inso lint spec ./oas.yaml

    # Use decKs openapi2kong command to generate Kong Declarative Configuration from the OpenAPI Specification exported from the Insomnia Workspace.

    - name: Generate Kong declarative configuration from Spec
      run: |
        deck file openapi2kong \
          --spec oas.yaml \
          --format yaml \
          --output-file ./kong-generated.yaml

    # Use decK Merge to merge together our generated Kong Declarative Configuration File with the contents of the Plugin folder in our repository

    - name: Merge Kong Configuration with Plugins
      run: |
        deck file merge ./kong-generated.yaml ./api/plugins/* -o kong.yaml

    # Use decK Validate to check that the new generated Kong Declarative Configuration is valid

    - name: Validate Kong declarative configuration
      run: |
        deck validate \
          --state kong.yaml
              
    - name: Diff declarative config
      run: deck diff --state kong.yaml --kong-addr ${{ secrets.KONG_ADDR }} --headers ${{ secrets.KONG_ADMIN }} --workspace default
      
    - name: Backup Existing Kong Configuration
      run: deck dump --kong-addr ${{ secrets.KONG_ADDR }} --headers ${{ secrets.KONG_ADMIN }} --workspace default
      
    # Publishes the Backup Kong Declarative Configuration as an artifact

    - name: 'Upload Kong Config Backup Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: kong-backup
        path: kong-backup.yaml
        
    - name: Deploy declarative config to default workspace
      run: deck sync --state kong.yaml --kong-addr ${{ secrets.KONG_ADDR }} --headers ${{ secrets.KONG_ADMIN }} --workspace default
